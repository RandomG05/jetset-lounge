
Ext.define('ExtApp.modules.billing.model.model_dataBilling', {
    extend: 'Ext.data.Model',
    alias: 'model_dataBilling',
    fields: [{
        name: 'id',
        type: 'int'
    }, {
        name: 'item_no',
        type: 'int'
    }, {
        name: 'table_id',
        type: 'string'
    }, {
        name: 'table_no',
        type: 'string'
    }, {
        name: 'billing_id',
        type: 'int'
    }, {
        name: 'billing_no',
        type: 'string'
    }, {
        name: 'billing_representative',
        type: 'string'
    }, {
        name: 'billing_no_show',
        type: 'string'
    }, {
        name: 'billing_date',
        type: 'string'
    }, {
        name: 'created_datetime',
        type: 'string'
    }, {
        name: 'created_date',
        type: 'string'
    }, {
        name: 'updated_date',
        type: 'string'
    }, {
        name: 'updated_time',
        type: 'string'
    }, {
        name: 'payment_date',
        type: 'string'
    }, {
        name: 'payment_time',
        type: 'string'
    }, {
        name: 'billing_status',
        type: 'string'
    }, {
        name: 'billing_notes',
        type: 'string'
    }, {
        name: 'total_pembulatan',
        type: 'string'
    }, {
        name: 'total_billing',
        type: 'string'
    }, {
        name: 'total_billing_display',
        type: 'string'
    }, {
        name: 'total_billing_show',
        type: 'string'
    }, {
        name: 'grand_total',
        type: 'string'
    }, {
        name: 'grand_total_show',
        type: 'string'
    }, {
        name: 'total_paid',
        type: 'string'
    }, {
        name: 'total_paid_show',
        type: 'string'
    }, {
        name: 'payment_id',
        type: 'int'
    }, {
        name: 'payment_type_name',
        type: 'string'
    }, {
        name: 'bank_id',
        type: 'int'
    }, {
        name: 'bank_name',
        type: 'int'
    }, {
        name: 'card_no',
        type: 'string'
    }, {
        name: 'include_tax',
        type: 'int'
    }, {
        name: 'tax_percentage',
        type: 'string'
    }, {
        name: 'tax_total',
        type: 'string'
    }, {
        name: 'tax_total_show',
        type: 'string'
    }, {
        name: 'include_service',
        type: 'int'
    }, {
        name: 'service_percentage',
        type: 'string'
    }, {
        name: 'service_total',
        type: 'string'
    }, {
        name: 'service_total_show',
        type: 'string'
    }, {
        name: 'discount_id',
        type: 'int'
    }, {
        name: 'discount_notes',
        type: 'string'
    }, {
        name: 'discount_percentage',
        type: 'string'
    }, {
        name: 'discount_price',
        type: 'string'
    }, {
        name: 'discount_total',
        type: 'string'
    }, {
        name: 'discount_total_show',
        type: 'string'
    }, {
        name: 'total_discount_item',
        type: 'string'
    }, {
        name: 'total_discount_billing',
        type: 'string'
    }, {
        name: 'total_qty_order',
        type: 'float'
    }, {
        name: 'total_qty_deliver',
        type: 'float'
    }, {
        name: 'order_total',
        type: 'string'
    }, {
        name: 'order_total_show',
        type: 'string'
    }, {
        name: 'total_hpp',
        type: 'string'
    }, {
        name: 'total_hpp_show',
        type: 'string'
    }, {
        name: 'total_profit',
        type: 'string'
    }, {
        name: 'total_profit_show',
        type: 'string'
    }, {
        name: 'percent_status_order',
        type: 'string'
    }, {
        name: 'user_fullname',
        type: 'string'
    }, {
        name: 'is_active',
        type: 'int'
    }, {
        name: 'is_active_text',
        type: 'string'
    }, {
        name: 'payment_note',
        type: 'string'
    }, {
        name: 'is_half_payment',
        type: 'int'
    }, {
        name: 'total_dp',
        type: 'string'
    }, {
        name: 'total_dp_show',
        type: 'string'
    }, {
        name: 'compliment_total',
        type: 'string'
    }, {
        name: 'compliment_total_show',
        type: 'string'
    }, {
        name: 'total_cash',
        type: 'string'
    }, {
        name: 'total_cash_show',
        type: 'string'
    }, {
        name: 'total_credit',
        type: 'string'
    }, {
        name: 'total_credit_show',
        type: 'string'
    }, {
        name: 'createdby',
        type: 'string'
    }, {
        name: 'updatedby',
        type: 'string'
    }, {
        name: 'merge_id',
        type: 'int'
    }, {
        name: 'merge_billing_no',
        type: 'string'
    }, {
        name: 'merge_main_status',
        type: 'int'
    }, {
        name: 'split_from_id',
        type: 'int'
    }, {
        name: 'split_merge_status',
        type: 'string'
    }, {
        name: 'max_pembulatan',
        type: 'int'
    }, {
        name: 'pembulatan_keatas',
        type: 'int'
    }, {
        name: 'total_guest',
        type: 'int'
    }, {
        name: 'total_crew',
        type: 'int'
    }, {
        name: 'total_gh',
        type: 'int'
    }, {
        name: 'signature',
        type: 'string'
    }, {
        name: 'sales_id',
        type: 'int'
    }, {
        name: 'sales_percent',
        type: 'string'
    }, {
        name: 'sales_price',
        type: 'string'
    }, {
        name: 'sales_type',
        type: 'string'
    }, {
        name: 'sales_name_company_fee',
        type: 'string'
    }, {
        name: 'lock_billing',
        type: 'int'
    }, {
        name: 'qc_notes',
        type: 'string'
    }, {
        name: 'ac_reg',
        type: 'string'
    }, {
        name: 'time_in',
        type: 'string'
    }, {
        name: 'voucher_no',
        type: 'string'
    }, {
        name: 'is_sistem_tawar',
        type: 'int'
    }, {
        name: 'single_rate',
        type: 'int'
    }, {
        name: 'customer_id',
        type: 'int'
    }, {
        name: 'customer_name',
        type: 'string'
    },/*Addition*/ {
        name: 'representative_id',
        type: 'int'
    }, {
        name: 'representative_name',
        type: 'string'
    }, {
        name: 'block_table',
        type: 'int'
    }, {
        name: 'is_reservation',
        type: 'int'
    }, {
        name: 'group_date',
        type: 'string'
    }, {
        name: 'txmark',
        type: 'string'
    }, {
        name: 'txmark_no',
        type: 'string'
    }, {
        name: 'txmark_no_show',
        type: 'string'
    }, {
        name: 'payment_note2',
        type: 'string'
    }, {
        name: 'billing_info',
        type: 'string'
    }, {
        name: 'table_button',
        type: 'int'
    }, {
        name: 'billing_color',
        type: 'string'
    }, {
        name: 'billing_datetime',
        type: 'string'
    }, {
        name: 'billing_time',
        type: 'string'
    }, {
        name: 'billing_no_before',
        type: 'string'
    }],
    proxy: {
        type: 'ajax',
        url: appUrl + 'billing/Dashboard/gridData',
        extraParams: {},
        actionMethods: {
            read: 'POST'
        },
        reader: {
            type: 'json',
            root: 'data',
            idProperty: 'id',
            totalProperty: 'totalCount'
        }
    }
});
Ext.define('ExtApp.modules.billing.model.model_billingDetail', {
    extend: 'Ext.data.Model',
    alias: 'model_billingDetail',
    fields: [{
        name: 'id',
        type: 'int'
    }, {
        name: 'item_no',
        type: 'int'
    }, {
        name: 'product_id',
        type: 'int'
    }, {
        name: 'product_detail_info',
        type: 'string'
    }, {
        name: 'product_name',
        type: 'string'
    }, {
        name: 'product_name_show',
        type: 'string'
    }, {
        name: 'product_desc',
        type: 'string'
    }, {
        name: 'product_price',
        type: 'string'
    }, {
        name: 'product_price_real',
        type: 'string'
    }, {
        name: 'product_price_show',
        type: 'string'
    }, {
        name: 'product_price_hpp',
        type: 'string'
    }, {
        name: 'product_normal_price',
        type: 'string'
    }, {
        name: 'billing_id',
        type: 'int'
    }, {
        name: 'category_id',
        type: 'int'
    }, {
        name: 'has_varian',
        type: 'int'
    }, {
        name: 'product_varian_id',
        type: 'int'
    }, {
        name: 'varian_id',
        type: 'int'
    }, {
        name: 'varian_name',
        type: 'string'
    }, {
        name: 'include_tax',
        type: 'int'
    }, {
        name: 'tax_percentage',
        type: 'string'
    }, {
        name: 'tax_total',
        type: 'string'
    }, {
        name: 'tax_total_show',
        type: 'string'
    }, {
        name: 'include_service',
        type: 'int'
    }, {
        name: 'service_percentage',
        type: 'string'
    }, {
        name: 'service_total',
        type: 'string'
    }, {
        name: 'service_total_show',
        type: 'string'
    }, {
        name: 'discount_id',
        type: 'int'
    }, {
        name: 'discount_notes',
        type: 'string'
    }, {
        name: 'discount_percentage',
        type: 'string'
    }, {
        name: 'discount_price',
        type: 'string'
    }, {
        name: 'discount_price_show',
        type: 'string'
    }, {
        name: 'discount_total',
        type: 'string'
    }, {
        name: 'discount_total_show',
        type: 'string'
    }, {
        name: 'is_takeaway',
        type: 'int'
    }, {
        name: 'is_takeaway_text',
        type: 'string'
    }, {
        name: 'takeaway_no_tax',
        type: 'int'
    }, {
        name: 'takeaway_no_service',
        type: 'int'
    }, {
        name: 'is_compliment',
        type: 'int'
    }, {
        name: 'is_compliment_text',
        type: 'string'
    }, {
        name: 'product_category_name',
        type: 'string'
    }, {
        name: 'product_type',
        type: 'string'
    }, {
        name: 'product_image',
        type: 'string'
    }, {
        name: 'product_image_show',
        type: 'string'
    }, {
        name: 'product_image_src',
        type: 'string'
    }, {
        name: 'order_qty',
        type: 'float'
    }, {
        name: 'order_total',
        type: 'string'
    }, {
        name: 'order_total_show',
        type: 'string'
    }, {
        name: 'order_subtotal',
        type: 'string'
    }, {
        name: 'order_subtotal_show',
        type: 'string'
    }, {
        name: 'order_total_real',
        type: 'string'
    }, {
        name: 'order_total_real_show',
        type: 'string'
    }, {
        name: 'order_status',
        type: 'string'
    }, {
        name: 'order_status_text',
        type: 'string'
    }, {
        name: 'order_notes',
        type: 'string'
    }, {
        name: 'hide_compliment_order',
        type: 'int'
    }, {
        name: 'is_active',
        type: 'int'
    }, {
        name: 'is_active_text',
        type: 'string'
    }, {
        name: 'retur_type',
        type: 'string'
    }, {
        name: 'retur_qty',
        type: 'float'
    }, {
        name: 'retur_reason',
        type: 'string'
    }, {
        name: 'is_promo',
        type: 'int'
    }, {
        name: 'promo_id',
        type: 'int'
    }, {
        name: 'promo_tipe',
        type: 'int'
    }, {
        name: 'promo_percentage',
        type: 'string'
    }, {
        name: 'promo_price',
        type: 'string'
    }, {
        name: 'promo_price_show',
        type: 'string'
    }, {
        name: 'promo_desc',
        type: 'string'
    }, {
        name: 'status_discount_text',
        type: 'string'
    }, {
        name: 'use_tax',
        type: 'int'
    }, {
        name: 'use_service',
        type: 'int'
    }, {
        name: 'is_buyget',
        type: 'int'
    }, {
        name: 'buyget_id',
        type: 'int'
    }, {
        name: 'buyget_tipe',
        type: 'string'
    }, {
        name: 'buyget_desc',
        type: 'string'
    }, {
        name: 'buyget_qty',
        type: 'float'
    }, {
        name: 'buyget_percentage',
        type: 'string'
    }, {
        name: 'buyget_total',
        type: 'string'
    }, {
        name: 'buyget_item',
        type: 'string'
    }, {
        name: 'ref_order_id',
        type: 'int'
    }, {
        name: 'free_item',
        type: 'int'
    }, {
        name: 'package_item',
        type: 'int'
    }, {
        name: 'total_taxservice_show',
        type: 'string'
    }, {
        name: 'supplier_id',
        type: 'int'
    }, {
        name: 'is_kerjasama',
        type: 'int'
    }, {
        name: 'is_kerjasama_text',
        type: 'string'
    }, {
        name: 'persentase_bagi_hasil',
        type: 'string'
    }, {
        name: 'total_bagi_hasil',
        type: 'string'
    }, {
        name: 'total_bagi_hasil_show',
        type: 'string'
    }, {
        name: 'item_code',
        type: 'string'
    }, {
        name: 'product_code',
        type: 'string'
    }, {
        name: 'use_stok_kode_unik',
        type: 'string'
    }, {
        name: 'data_stok_kode_unik',
        type: 'string'
    }, {
        name: 'has_list_price',
        type: 'int'
    }],
    proxy: {
        type: 'ajax',
        url: appUrl + 'billing/dataBilling/gridData_billingDetail',
        extraParams: {
            new_order: 1
        },
        actionMethods: {
            read: 'POST'
        },
        reader: {
            type: 'json',
            root: 'data',
            idProperty: 'id',
            totalProperty: 'totalCount'
        }
    }
});
Ext.define('ExtApp.modules.billing.model.model_get_dataBilling', {
    extend: 'Ext.data.Model',
    alias: 'model_get_dataBilling',
    fields: [{
        name: 'id',
        type: 'int'
    }, {
        name: 'item_no',
        type: 'int'
    }, {
        name: 'table_id',
        type: 'string'
    }, {
        name: 'table_no',
        type: 'string'
    }, {
        name: 'billing_id',
        type: 'int'
    }, {
        name: 'billing_no',
        type: 'string'
    }, {
        name: 'billing_status',
        type: 'string'
    }, {
        name: 'merge_id',
        type: 'int'
    }, {
        name: 'merge_main_status',
        type: 'int'
    }],
    proxy: {
        type: 'ajax',
        url: appUrl + 'billing/dataBilling/gridData',
        extraParams: {},
        actionMethods: {
            read: 'POST'
        },
        reader: {
            type: 'json',
            root: 'data',
            idProperty: 'id',
            totalProperty: 'totalCount'
        }
    }
});
Ext.define('ExtApp.modules.systems.model.model_UserData', {
    extend: 'Ext.data.Model',
    alias: 'model_UserData',
    fields: [{
        name: 'id',
        type: 'int'
    }, {
        name: 'user_username',
        type: 'string'
    }, {
        name: 'user_pin',
        type: 'string'
    }, {
        name: 'client_id',
        type: 'int'
    }, {
        name: 'client_name',
        type: 'string'
    }, {
        name: 'client_structure_id',
        type: 'int'
    }, {
        name: 'client_structure_name',
        type: 'string'
    }, {
        name: 'role_id',
        type: 'int'
    }, {
        name: 'role_name',
        type: 'string'
    }, {
        name: 'user_fullname',
        type: 'string'
    }, {
        name: 'user_firstname',
        type: 'string'
    }, {
        name: 'user_lastname',
        type: 'string'
    }, {
        name: 'user_email',
        type: 'string'
    }, {
        name: 'user_phone',
        type: 'string'
    }, {
        name: 'user_mobile',
        type: 'string'
    }, {
        name: 'user_address',
        type: 'string'
    }, {
        name: 'avatar',
        type: 'string'
    }, {
        name: 'is_active',
        type: 'int'
    }, {
        name: 'is_active_text',
        type: 'string'
    }, {
        name: 'window_mode',
        type: 'string'
    }],
    proxy: {
        type: 'ajax',
        url: appUrl + 'systems/UserData/gridData',
        extraParams: {},
        actionMethods: {
            read: 'POST'
        },
        reader: {
            type: 'json',
            root: 'data',
            idProperty: 'id',
            totalProperty: 'totalCount'
        }
    }
});
Ext.define('ExtApp.modules.billing.store.store_dataBilling', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.billing.model.model_dataBilling',
    autoLoad: false,
    remoteSort: true
});
Ext.define('ExtApp.modules.billing.store.store_billingDetail', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.billing.model.model_billingDetail',
    autoLoad: false,
    remoteSort: true
});
Ext.define('ExtApp.modules.billing.store.store_get_dataBilling', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.billing.model.model_get_dataBilling',
    autoLoad: false,
    remoteSort: true
});
Ext.define('ExtApp.modules.systems.store.store_UserData', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.systems.model.model_UserData',
    autoLoad: false,
    remoteSort: true
});
Ext.define("ExtApp.modules.billing.view.dashboard", {
    openWindow: function (me) {
        var theApp = me.app;
        var desktop = theApp.getDesktop();
        var v_this = this;
        var helperGrid = theApp.getHelper('Grid');
        var phpJs = theApp.getHelper('phpJs');

        var store

        var store_billingCashier_paidBilling = theApp.getStore('billingCashier_paidBilling', false);
        if (store_billingCashier_paidBilling == false) {
            store_billingCashier_paidBilling = theApp.copyStore('billing', 'store_dataBilling', 'billingCashier_paidBilling');
        }

        store_billingCashier_paidBilling.proxy.extraParams.billing_status = 'paid';
        store_billingCashier_paidBilling.proxy.extraParams.is_peruser = 0;
        store_billingCashier_paidBilling.proxy.extraParams.skip_date = 0;
        store_billingCashier_paidBilling.proxy.extraParams.use_payment_date = 0;
        store_billingCashier_paidBilling.proxy.extraParams.sorting_by = 'payment_date';
        store_billingCashier_paidBilling.proxy.extraParams.use_range_date = 0;
        store_billingCashier_paidBilling.proxy.extraParams.keywords = '';
        store_billingCashier_paidBilling.proxy.extraParams.table_id = 0;
        store_billingCashier_paidBilling.proxy.extraParams.limit = 25;

        var add_parameter = '_dc=' + phpJs.mktime();
        add_parameter += '&date_from=' + phpJs.date("d-m-Y");
        add_parameter += '&date_till=' + phpJs.date("d-m-Y");
        add_parameter += '&shift_billing=0';
        add_parameter += '&kasir_billing=';
        add_parameter += '&tipe_sales=all_sales';
        add_parameter += '&sorting=';
        add_parameter += '&sortingDesc=';
        add_parameter += '&show_payment=true';
        add_parameter += '&show_compliment=false';
        add_parameter += '&show_tax=false';
        add_parameter += '&show_service=true';
        add_parameter += '&show_dp=false';
        add_parameter += '&show_pembulatan=true';
        add_parameter += '&show_note=true';
        add_parameter += '&show_shift_kasir=false';
        add_parameter += '&format_nominal=true';
        var url_report = appUrl + 'billing/Dashboard/gridData?' + add_parameter;

        var store_dashboard_totalCustomer = Ext.create('Ext.data.JsonStore', {
            fields: ['customer_name', 'total_visit'],
            data: [
                {customer_name: 'Lukman', total_visit: '13'},
                {customer_name: 'Taufik', total_visit: '25'},
                {customer_name: 'Hardin', total_visit: '52'},
                {customer_name: 'John', total_visit: '21'},
                {customer_name: 'Doe', total_visit: '9'}
            ]
        });
        var store_dashboard_categoryPurchase = Ext.create('Ext.data.JsonStore', {
            fields: ['range', 'catering', 'dessert', 'florist', 'others'],
            data: [
                {range: 'Week 1', catering: '34', dessert: '13', florist: '20', others: '72'},
                {range: 'Week 2', catering: '32', dessert: '18', florist: '16', others: '67'},
                {range: 'Week 3', catering: '42', dessert: '27', florist: '14', others: '69'},
                {range: 'Week 4', catering: '36', dessert: '31', florist: '15', others: '54'}
            ]
        });

        var store_dashboard_totalBilling = Ext.create('Ext.data.JsonStore', {
            fields: ['date', 'total_lounge', 'total_catering'],
            data: [
                {date:1, total_lounge:1000000, total_catering:300000},
                {date:2, total_lounge:1350000, total_catering:100000},
                {date:3, total_lounge:1000000, total_catering:120000},
                {date:4, total_lounge:0, total_catering:850000},
                {date:5, total_lounge:2250000, total_catering:500000},
                {date:6, total_lounge:1500000, total_catering:550000},
                {date:7, total_lounge:1000000, total_catering:452500},
                {date:8, total_lounge:1200000, total_catering:1300000},
                {date:9, total_lounge:2300000, total_catering:2350000},
                {date:10, total_lounge:1800000, total_catering:1505000},
                {date:11, total_lounge:1750000, total_catering:2150000},
                {date:12, total_lounge:3500000, total_catering:225000},
                {date:13, total_lounge:2650000, total_catering:1575000},
                {date:14, total_lounge:150000, total_catering:1625000},
                {date:15, total_lounge:1730000, total_catering:840000},
            ]
        })

        var store_charts = Ext.create('Ext.data.JsonStore', {
            fields: ['chart_name', 'chart_id'],
            data: [
                {chart_name: 'Customer Visits', chart_id: 1},
                {chart_name: 'Category Purchases', chart_id: 2},
                {chart_name: 'Total Billing', chart_id: 3},
            ]
        })

        return desktop.createWindow({
            id: me.id,
            title: 'Dashboard',
            width: 880,
            height: 600,
            iconCls: 'icon-grid',
            animCollapse: false,
            constrainHeader: true,
            border: 0,
            layout: {
                type: 'fit'
            },
            items: [{
                xtype: 'form',
                id: 'form_dashboard',
                border: 0,
                layout: {
                    type: 'border'
                },
                items: [{
                    xtype: 'panel',
                    title: 'Filters',
                    width: 280,
                    region: 'west',
                    id: 'form_filter_dashboard',
                    split: true,
                    collapsible: true,
                    splitterResize: false,
                    collapseMode: 'mini',
                    animCollapse: true,
                    scroll: false,
                    bodyPadding: '5 10 5 10',
                    margin: '0 0 0 0',
                    items: [{
                        xtype: 'displayfield',
                        fieldLabel: '',
                        value: '<font style="color:gray; font-weight:bold;">Filter Tanggal:</font>'
                    }, {
                        xtype: 'container',
                        border: 0,
                        layout: {
                            type: 'column'
                        },
                        margin: '0 0 0 5',
                        items: [{
                            xtype: 'datefield',
                            fieldLabel: '',
                            name: 'date_from',
                            id: 'src_dateFrom_dashboard',
                            labelSeparator: '',
                            format: 'd-m-Y',
                            altFormats: 'Y-m-d|d-m-Y|dmY|Ymd',
                            margin: '0 0 0 0',
                            labelWidth: 0,
                            width: 105,
                            value: phpJs.date('d-m-Y'),
                            allowBlank: false
                        }, {
                            xtype: 'datefield',
                            fieldLabel: ' s/d ',
                            name: 'date_till',
                            id: 'src_dateTill_dashboard',
                            labelSeparator: '',
                            format: 'd-m-Y',
                            altFormats: 'Y-m-d|d-m-Y|dmY|Ymd',
                            margin: '0 0 0 10',
                            labelWidth: 20,
                            width: 130,
                            value: phpJs.date('d-m-Y'),
                            allowBlank: false
                        }]
                    }, {
                        xtype: 'displayfield',
                        fieldLabel: '',
                        value: '<font style="color:gray; font-weight:bold;">Tipe Chart:</font>'
                    }, {
                        xtype: 'combobox',
                        name: 'chart_list',
                        anchor: '100%',
                        store: store_charts,
                        queryMode: 'local',
                        hiddenName: "val",
                        displayField: 'chart_name',
                        valueField: 'chart_id',
                        typeAhead: true,
                        minChars: 1,
                        forceSelection: true,
                        allowBlank: false,
                    }, {
                        xtype: 'container',
                        style: 'text-align:right',
                        border: 0,
                        items: [{
                            xtype: 'button',
                            text: 'Find',
                            scale: 'medium',
                            margin: '15 0 0 0',
                            id: 'btnSearch_customerVisit',
                            tooltip: 'Find',
                            iconCls: 'btn-search',
                            width: 90,
                            handler: function () {
                                me.get_chartData();
                            }
                        }]
                    }]
                }, {
                    xtype: "panel",
                    id: 'chart_1',
                    region: 'center',
                    hidden: false,
                    items: [{
                        xtype: 'chart',
                        width: 600,
                        height: 500,
                        padding: '10 0 0 0',
                        style: 'background :#fff;',
                        animate: true,
                        shadow: false,
                        store: store_dashboard_totalCustomer,
                        insetPadding: 40,
                        legend: {
                            field: 'customer_name',
                            docked: 'bottom',
                            boxStrokeWidth: 0,
                            labelFont: '12px Helvetica'
                        },
                        items: {
                            type: 'text',
                            text: 'Customer Visits',
                            font: '22px Helvetica',
                            width: 100,
                            height: 30,
                            x: 40,
                            y: 12
                        },
                        series: [{
                            type: 'pie',
                            angleField: 'total_visit',
                            donut: 10,
                            label: {
                                field: 'customer_name',
                                display: 'horizontal',
                            },
                            shoInLegend: true,
                            highlight: {
                                segment: {
                                    margin: 20
                                }
                            },
                            tips: {
                                trackMouse: true,
                                width: 100,
                                renderer: function(storeItem, item) {
                                    this.setTitle(storeItem.get('customer_name')+':'+storeItem.get('total_visit'));
                                }
                            }
                        }]
                    }]
                }, {
                    xtype: "panel",
                    id: 'chart_2',
                    region: 'center',
                    layout: 'fit',
                    hidden: true,
                    items: [{
                        xtype: 'chart',
                        width: 600,
                        height: 500,
                        padding: '10 0 0 0',
                        style: 'background :#fff;',
                        animate: true,
                        shadow: false,
                        store: store_dashboard_categoryPurchase,
                        insetPadding: 40,
                        legend: {
                            field: 'category_name',
                            docked: 'bottom',
                            boxStrokeWidth: 0,
                            labelFont: '12px Helvetica'
                        },
                        items: {
                            type: 'text',
                            text: 'Category Purchases',
                            font: '22px Helvetica',
                            width: 100,
                            height: 30,
                            x: 40,
                            y: 12
                        },
                        axes: [{
                            type: 'numeric',
                            position: 'left',
                            fields: 'catering',
                            grid: true,
                            minimum: 0,
                        }, {
                            type: 'category',
                            position: 'bottom',
                            fields: 'range',
                            grid: true
                        }],
                        series: [{
                            type: 'column',
                            axis: 'left',
                            title: ['Catering', 'Dessert', 'Florist', 'Others'],
                            xField: 'range',
                            yField: ['catering', 'dessert', 'florist', 'others'],
                            style: {
                                opacity: 0.80
                            },
                            highlight: {
                                fill: '#000',
                                'stroke-width': 1,
                                stroke: '#000'
                            },
                            tips: {
                                trackMouse: true,
                                style: 'background: #fff',
                                width: 160,
                                renderer: function(storeItem, item) {
                                    var category = item.series.title[Ext.Array.indexOf(item.series.yField, item.yField)];
                                    this.setTitle(category+' for '+storeItem.get('range')+' : '+storeItem.get(item.yField));
                                }
                            }
                        }]
                    }]
                }, {
                    xtype: "panel",
                    id: 'chart_3',
                    region: 'center',
                    hidden: true,
                    layout: 'fit',
                    items: [{
                        xtype: 'chart',
                        width: 600,
                        height: 500,
                        padding: '10 0 0 0',
                        style: 'background :#fff;',
                        animate: true,
                        shadow: false,
                        store: store_dashboard_totalBilling,
                        insetPadding: 40,
                        legend: {
                            field: 'customer_name',
                            docked: 'bottom',
                            boxStrokeWidth: 0,
                            labelFont: '12px Helvetica'
                        },
                        items: {
                            type: 'text',
                            text: 'Total Billing',
                            font: '22px Helvetica',
                            width: 100,
                            height: 30,
                            x: 40,
                            y: 12
                        },
                        axes: [{
                            type: 'numeric',
                            position: 'left',
                            grid: true,
                            fields: ['total_lounge'],
                            label: {
                                renderer: function(v) { return v; }
                            },
                            minimum: 0
                        }, {
                            type: 'category',
                            position: 'bottom',
                            grid: true,
                            fields: ['date'],
                        }],
                        series: [{
                            type: 'column',
                            axis: 'left',
                            title: ['Total SO Lounge', 'Total SO Catering'],
                            xField: 'date',
                            yField: ['total_lounge', 'total_catering'],
                            stacked: true,
                            style: {
                                opacity: 0.80
                            },
                            highlight: {
                                fill: '#000',
                                'stroke-width': 1,
                                stroke: '#fff',
                            },
                            tips: {
                                trackMouse: true,
                                style: 'background: #fff',
                                width: 200,
                                renderer: function(storeItem, item) {
                                    var soType = item.series.title[Ext.Array.indexOf(item.series.yField, item.yField)];
                                    this.setTitle(soType+' at '+storeItem.get('date')+': '+storeItem.get(item.yField));
                                }
                            }
                        }]
                    }]
                }]
            }],
            listeners: {
                show: function () {
                    var form = Ext.getCmp('form_dashboard').getForm();
                    this.maximize();
                    form.findField('chart_list').setValue('1');
                }
            }
        });
    }
});