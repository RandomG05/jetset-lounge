Ext.define('ExtApp.modules.systems.model.model_UserData', {
    extend: 'Ext.data.Model',
    alias: 'model_UserData',
    fields: [{
        name: 'id',
        type: 'int'
    }, {
        name: 'user_username',
        type: 'string'
    }, {
        name: 'user_pin',
        type: 'string'
    }, {
        name: 'client_id',
        type: 'int'
    }, {
        name: 'client_name',
        type: 'string'
    }, {
        name: 'client_structure_id',
        type: 'int'
    }, {
        name: 'client_structure_name',
        type: 'string'
    }, {
        name: 'role_id',
        type: 'int'
    }, {
        name: 'role_name',
        type: 'string'
    }, {
        name: 'user_fullname',
        type: 'string'
    }, {
        name: 'user_firstname',
        type: 'string'
    }, {
        name: 'user_lastname',
        type: 'string'
    }, {
        name: 'user_email',
        type: 'string'
    }, {
        name: 'user_phone',
        type: 'string'
    }, {
        name: 'user_mobile',
        type: 'string'
    }, {
        name: 'user_address',
        type: 'string'
    }, {
        name: 'avatar',
        type: 'string'
    }, {
        name: 'is_active',
        type: 'int'
    }, {
        name: 'is_active_text',
        type: 'string'
    }, {
        name: 'window_mode',
        type: 'string'
    }],
    proxy: {
        type: 'ajax',
        url: appUrl + 'systems/UserData/gridData',
        extraParams: {},
        actionMethods: {
            read: 'POST'
        },
        reader: {
            type: 'json',
            root: 'data',
            idProperty: 'id',
            totalProperty: 'totalCount'
        }
    }
});
Ext.define('ExtApp.modules.billing.store.store_billingDetail', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.billing.model.model_billingDetail',
    autoLoad: false,
    remoteSort: true
});
Ext.define('ExtApp.modules.systems.store.store_UserData', {
    extend: 'Ext.data.Store',
    model: 'ExtApp.modules.systems.model.model_UserData',
    autoLoad: false,
    remoteSort: true
});
Ext.define("ExtApp.modules.billing.view.dashboard", {
    openWindow: function (me) {
        var theApp = me.app;
        var desktop = theApp.getDesktop();
        var v_this = this;
        var helperGrid = theApp.getHelper('Grid');
        var phpJs = theApp.getHelper('phpJs');
        me.store_ComboboxSortReport_reportSales = theApp.getStore('store_ComboboxSortReport_reportSales', false);
        if (me.store_ComboboxSortReport_reportSales == false) {
            me.store_ComboboxSortReport_reportSales = theApp.copyStore('billing', 'store_sortReport', 'store_ComboboxSortReport_reportSales');
        }
        me.store_ComboboxSortReport_reportSales.proxy.extraParams.tipe = '';
        me.store_ComboboxSortReport_reportSales.proxy.extraParams.recap = 0;
        var store_ComboboxTipeSales_reportSales = theApp.getStore('store_ComboboxTipeSales_reportSales', false);
        if (store_ComboboxTipeSales_reportSales == false) {
            store_ComboboxTipeSales_reportSales = theApp.copyStore('billing', 'store_tipeSalesReport', 'store_ComboboxTipeSales_reportSales');
        }
        me.store_ComboboxKasir_reportSales = theApp.getStore('store_UserData', false);
        if (me.store_ComboboxKasir_reportSales == false) {
            me.store_ComboboxKasir_reportSales = theApp.copyStore('systems', 'store_UserData', 'store_ComboboxKasir_reportSales');
        }
        me.store_ComboboxKasir_reportSales.proxy.extraParams.role_id = opt_role_id_kasir;
        me.store_ComboboxKasir_reportSales.proxy.extraParams.limit = 999999;
        me.store_ComboboxKasir_reportSales.proxy.extraParams.show_all_text = 1;
        me.store_ComboboxKasir_reportSales.proxy.extraParams.show_choose_text = 0;
        me.store_ComboboxKasir_reportSales.proxy.extraParams.is_dropdown = 1;
        me.store_ComboboxKasir_reportSales.proxy.extraParams.keywords = '';
        me.store_billingDetail = theApp.getStore('store_billingDetail', false);

        if (me.store_billingDetail == false) {
            me.store_billingDetailstore_billingDetail = theApp.copyStore('billing', 'store_billingDetail', 'store_billingDetail');
        }
        me.store_billingDetail.proxy.extraParams.limit = 9999999;
        me.store_billingDetail.proxy.extraParams.show_all_text = 1;
        me.store_billingDetail.proxy.extraParams.show_choose_text = 0;
        me.store_billingDetail.proxy.extraParams.is_dropdown = 1;
        me.store_billingDetail.proxy.extraParams.product_type = '';
        me.store_billingDetail.proxy.extraParams.keywords = '';

        return desktop.createWindow({
            id: me.id,
            title: 'Dashboard',
            width: 880,
            height: 600,
            iconCls: 'icon-grid',
            animCollapse: false,
            constrainHeader: true,
            border: 0,
            layout: {
                type: 'border'
            },
            items: [{
                xtype: 'panel',
                title: 'Filters',
                width: 280,
                region: 'west',
                id: 'form_filter_dashboard',
                split: true,
                collapsible: true,
                splitterResize: false,
                collapseMode: 'mini',
                animCollapse: true,
                scroll: false,
                bodyPadding: '5 10 5 10',
                margin: '0 0 0 0',
                items: [{
                    xtype: 'displayfield',
                    fieldLabel: '',
                    value: '<font style="color:gray; font-weight:bold;">Filter Tanggal:</font>'
                }, {
                    xtype: 'container',
                    border: 0,
                    layout: {
                        type: 'column'
                    },
                    margin: '0 0 0 5',
                    items: [{
                        xtype: 'datefield',
                        fieldLabel: '',
                        name: 'date_from',
                        id: 'src_dateFrom_dashboard',
                        labelSeparator: '',
                        format: 'd-m-Y',
                        altFormats: 'Y-m-d|d-m-Y|dmY|Ymd',
                        margin: '0 0 0 0',
                        labelWidth: 0,
                        width: 105,
                        value: phpJs.date('d-m-Y'),
                        allowBlank: false
                    }, {
                        xtype: 'datefield',
                        fieldLabel: ' s/d ',
                        name: 'date_till',
                        id: 'src_dateTill_dashboard',
                        labelSeparator: '',
                        format: 'd-m-Y',
                        altFormats: 'Y-m-d|d-m-Y|dmY|Ymd',
                        margin: '0 0 0 10',
                        labelWidth: 20,
                        width: 130,
                        value: phpJs.date('d-m-Y'),
                        allowBlank: false
                    }]
                }, {
                    xtype: "panel",
                    layout: 'fit',
                    region: 'center',
                    width: 600,
                    height: 500,
                    border: false,
                    items: [{
                        xtype: 'chart',
                        height: 410,
                        store: me.store_billingDetail,
                        animate: true,
                        style: 'background :#fff;',
                    }],
                    axes: [{
                        type: 'numeric',
                        position: 'left',
                    }]
                }]
            }],
            listeners: {

            } 
        });
    }
});